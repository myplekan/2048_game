{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar cells = document.querySelectorAll(\".field-cell\");\nvar rows = document.querySelectorAll(\".field-row\");\nvar start = document.querySelector(\".start\");\nvar messages = document.querySelector(\".message-container\");\nvar scoreGame = document.querySelector(\".game-score\");\nvar grid = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nfunction random(integer) {\n    return Math.floor(Math.random() * integer);\n}\nfunction randomCell() {\n    var twoFour = random(10);\n    var x = random(4);\n    var y = random(4);\n    if (grid[x][y] === 0) {\n        twoFour < 9 ? grid[x][y] = 2 : grid[x][y] = 4;\n        return;\n    }\n    randomCell();\n}\nfunction createBoard() {\n    var score = 0;\n    for(var i = 0; i < grid.length; i++)for(var j = 0; j < grid.length; j++){\n        rows[i].cells[j].textContent = grid[i][j];\n        score = score + grid[i][j];\n        if (rows[i].cells[j].textContent === \"0\") rows[i].cells[j].textContent = \"\";\n    }\n    scoreGame.textContent = score;\n    cheker();\n}\nfunction cheker() {\n    var count = 0;\n    for(var i = 0; i < grid.length; i++){\n        for(var j = 0; j < grid.length - 1; j++){\n            if (grid[i][j] === 0) count++;\n            if (grid[i][j] === grid[i][j + 1] && grid[i][j] > 0) count++;\n        }\n        var column = [\n            grid[0][i],\n            grid[1][i],\n            grid[2][i],\n            grid[3][i]\n        ];\n        for(var k = 0; k < column.length; k++){\n            if (column[k] === 0) count++;\n            if (column[k] === column[k + 1]) count++;\n        }\n    }\n    if (count === 0) hidden(\"lose\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = cells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var cell = _step.value;\n            var className = cell.classList.item(1);\n            if (className) cell.classList.toggle(className);\n            cell.classList.add(\"field-cell--\".concat(cell.textContent));\n            if (cell.classList.contains(\"field-cell--2048\")) hidden(\"win\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction moveHorizontal(key) {\n    var _loop = function(i) {\n        var filterRow = grid[i].filter(function(item) {\n            return item !== 0;\n        });\n        var filterValue = move(filterRow, key);\n        if (filterValue.length >= 1) {\n            if (key === \"ArrowLeft\") while(filterValue.length < 4)filterValue.push(0);\n            if (key === \"ArrowRight\") while(filterValue.length < 4)filterValue.unshift(0);\n            for(var j = 0; j < grid.length; j++){\n                if (grid[i][j] !== filterValue[j]) movedOrMerged = true;\n                grid[i][j] = filterValue[j];\n            }\n        }\n    };\n    var movedOrMerged = false;\n    for(var i = 0; i < grid.length; i++)_loop(i);\n    if (movedOrMerged) randomCell();\n    createBoard();\n}\nfunction moveVertical(key) {\n    var _loop = function(i) {\n        var column = [\n            grid[0][i],\n            grid[1][i],\n            grid[2][i],\n            grid[3][i]\n        ];\n        var filterColumn = column.filter(function(item) {\n            return item !== 0;\n        });\n        var filterValue = move(filterColumn, key);\n        if (key === \"ArrowUp\") while(filterValue.length < 4)filterValue.push(0);\n        if (key === \"ArrowDown\") while(filterValue.length < 4)filterValue.unshift(0);\n        for(var j = 0; j < grid.length; j++){\n            if (grid[j][i] !== filterValue[j]) movedOrMerged = true;\n            grid[j][i] = filterValue[j];\n        }\n    };\n    var movedOrMerged = false;\n    for(var i = 0; i < grid.length; i++)_loop(i);\n    if (movedOrMerged) randomCell();\n    createBoard();\n}\nfunction move(line, direction) {\n    if (direction === \"ArrowDown\" || direction === \"ArrowRight\") {\n        for(var i = line.length; i >= 0; i--)if (line[i] === line[i - 1]) {\n            line[i] += line[i - 1];\n            line[i - 1] = 0;\n        }\n    }\n    if (direction === \"ArrowUp\" || direction === \"ArrowLeft\") {\n        for(var i1 = 0; i1 < line.length; i1++)if (line[i1] === line[i1 + 1]) {\n            line[i1] += line[i1 + 1];\n            line[i1 + 1] = 0;\n        }\n    }\n    return line.filter(function(item) {\n        return item > 0;\n    });\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    if (start.classList.contains(\"start\")) return;\n    switch(e.key){\n        case \"ArrowUp\":\n            moveVertical(e.key);\n            break;\n        case \"ArrowDown\":\n            moveVertical(e.key);\n            break;\n        case \"ArrowRight\":\n            moveHorizontal(e.key);\n            break;\n        case \"ArrowLeft\":\n            moveHorizontal(e.key);\n            break;\n    }\n});\nfunction reset() {\n    for(var i = 0; i < grid.length; i++)for(var j = 0; j < grid.length; j++)grid[i][j] = 0;\n}\nmessages.insertAdjacentHTML(\"beforeend\", '\\n  <p class=\"message message-restart hidden\">\\n    Press \"Restart\" to begin new game.\\n  </p>\\n');\nstart.addEventListener(\"click\", function(e) {\n    if (start.classList.contains(\"start\")) {\n        start.classList.remove(\"start\");\n        start.classList.add(\"restart\");\n        start.textContent = \"restart\";\n    }\n    hidden(\"restart\");\n    reset();\n    randomCell();\n    randomCell();\n    createBoard();\n});\nfunction hidden(message) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = messages.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var mess = _step.value;\n            mess.classList.contains(\"message-\".concat(message)) ? mess.classList.remove(\"hidden\") : mess.classList.add(\"hidden\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=index.d3530a08.js.map\n","'use strict';\n\nconst cells = document.querySelectorAll('.field-cell');\nconst rows = document.querySelectorAll('.field-row');\nconst start = document.querySelector('.start');\nconst messages = document.querySelector('.message-container');\nconst scoreGame = document.querySelector('.game-score');\nconst grid = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction random(integer) {\n  return Math.floor(Math.random() * integer);\n};\n\nfunction randomCell() {\n  const twoFour = random(10);\n  const x = random(4);\n  const y = random(4);\n\n  if (grid[x][y] === 0) {\n    (twoFour < 9)\n      ? grid[x][y] = 2\n      : grid[x][y] = 4;\n\n    return;\n  }\n  randomCell();\n}\n\nfunction createBoard() {\n  let score = 0;\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length; j++) {\n      rows[i].cells[j].textContent = grid[i][j];\n      score = score + grid[i][j];\n\n      if (rows[i].cells[j].textContent === '0') {\n        rows[i].cells[j].textContent = '';\n      }\n    }\n  }\n  scoreGame.textContent = score;\n\n  cheker();\n}\n\nfunction cheker() {\n  let count = 0;\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length - 1; j++) {\n      if (grid[i][j] === 0) {\n        count++;\n      }\n\n      if (grid[i][j] === grid[i][j + 1] && grid[i][j] > 0) {\n        count++;\n      }\n    }\n\n    const column = [\n      grid[0][i],\n      grid[1][i],\n      grid[2][i],\n      grid[3][i],\n    ];\n\n    for (let k = 0; k < column.length; k++) {\n      if (column[k] === 0) {\n        count++;\n      }\n\n      if (column[k] === column[k + 1]) {\n        count++;\n      }\n    }\n  }\n\n  if (count === 0) {\n    hidden('lose');\n  }\n\n  for (const cell of cells) {\n    const className = cell.classList.item(1);\n\n    if (className) {\n      cell.classList.toggle(className);\n    }\n\n    cell.classList.add(`field-cell--${cell.textContent}`);\n\n    if (cell.classList.contains('field-cell--2048')) {\n      hidden('win');\n    }\n  }\n}\n\nfunction moveHorizontal(key) {\n  let movedOrMerged = false;\n\n  for (let i = 0; i < grid.length; i++) {\n    const filterRow = grid[i].filter(item => item !== 0);\n    const filterValue = move(filterRow, key);\n\n    if (filterValue.length >= 1) {\n      if (key === 'ArrowLeft') {\n        while (filterValue.length < 4) {\n          filterValue.push(0);\n        }\n      }\n\n      if (key === 'ArrowRight') {\n        while (filterValue.length < 4) {\n          filterValue.unshift(0);\n        }\n      }\n\n      for (let j = 0; j < grid.length; j++) {\n        if (grid[i][j] !== filterValue[j]) {\n          movedOrMerged = true;\n        }\n        grid[i][j] = filterValue[j];\n      }\n    }\n  }\n\n  if (movedOrMerged) {\n    randomCell();\n  }\n\n  createBoard();\n}\n\nfunction moveVertical(key) {\n  let movedOrMerged = false;\n\n  for (let i = 0; i < grid.length; i++) {\n    const column = [\n      grid[0][i],\n      grid[1][i],\n      grid[2][i],\n      grid[3][i],\n    ];\n    const filterColumn = column.filter(item => item !== 0);\n    const filterValue = move(filterColumn, key);\n\n    if (key === 'ArrowUp') {\n      while (filterValue.length < 4) {\n        filterValue.push(0);\n      }\n    }\n\n    if (key === 'ArrowDown') {\n      while (filterValue.length < 4) {\n        filterValue.unshift(0);\n      }\n    }\n\n    for (let j = 0; j < grid.length; j++) {\n      if (grid[j][i] !== filterValue[j]) {\n        movedOrMerged = true;\n      }\n      grid[j][i] = filterValue[j];\n    }\n  }\n\n  if (movedOrMerged) {\n    randomCell();\n  }\n\n  createBoard();\n}\n\nfunction move(line, direction) {\n  if (direction === 'ArrowDown' || direction === 'ArrowRight') {\n    for (let i = line.length; i >= 0; i--) {\n      if (line[i] === line[i - 1]) {\n        line[i] += line[i - 1];\n        line[i - 1] = 0;\n      }\n    }\n  }\n\n  if (direction === 'ArrowUp' || direction === 'ArrowLeft') {\n    for (let i = 0; i < line.length; i++) {\n      if (line[i] === line[i + 1]) {\n        line[i] += line[i + 1];\n        line[i + 1] = 0;\n      }\n    }\n  }\n\n  return line.filter(item => item > 0);\n}\n\ndocument.addEventListener('keydown', e => {\n  if (start.classList.contains('start')) {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveVertical(e.key);\n      break;\n    case 'ArrowDown':\n      moveVertical(e.key);\n      break;\n    case 'ArrowRight':\n      moveHorizontal(e.key);\n      break;\n    case 'ArrowLeft':\n      moveHorizontal(e.key);\n      break;\n  }\n});\n\nfunction reset() {\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length; j++) {\n      grid[i][j] = 0;\n    }\n  }\n}\n\nmessages.insertAdjacentHTML('beforeend', `\n  <p class=\"message message-restart hidden\">\n    Press \"Restart\" to begin new game.\n  </p>\n`);\n\nstart.addEventListener('click', (e) => {\n  if (start.classList.contains('start')) {\n    start.classList.remove('start');\n    start.classList.add('restart');\n    start.textContent = 'restart';\n  }\n\n  hidden('restart');\n  reset();\n  randomCell();\n  randomCell();\n  createBoard();\n});\n\nfunction hidden(message) {\n  for (const mess of messages.children) {\n    (mess.classList.contains(`message-${message}`))\n      ? mess.classList.remove('hidden')\n      : mess.classList.add('hidden');\n  }\n}\n"],"names":["cells","document","querySelectorAll","rows","start","querySelector","messages","scoreGame","grid","random","integer","Math","floor","randomCell","twoFour","x","y","createBoard","score","i","length","j","textContent","cheker","count","column","k","hidden","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","cell","value","className","classList","item","toggle","add","concat","contains","err","return","move","line","direction","i1","filter","message","children","mess","remove","addEventListener","e","key","moveVertical","movedOrMerged","_loop","filterValue","push","unshift","moveHorizontal","insertAdjacentHTML","reset"],"version":3,"file":"index.d3530a08.js.map"}